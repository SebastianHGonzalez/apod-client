{"version":3,"sources":["Store/Actions/Article.ts","Store/Actions/index.ts","Clients/APODApiClient.ts","Config/index.ts","Config/config.ts","Store/Sagas/Article.ts","Store/Sagas/index.ts","Store/Reducers/Article.ts","Store/Reducers/index.ts","Store/index.ts","Components/Common/Error.tsx","Components/Common/Spinner.tsx","Components/APODClient.tsx","Store/Selectors/Article.ts","Components/APODArticle/Article/Title.tsx","Components/APODArticle/Article/ImageContainer.tsx","Components/APODArticle/Article/Body.tsx","Components/APODArticle/APODArticle.tsx","Components/APODArticle/index.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["types","fetchArticle","start","success","error","Article","creators","type","article","Actions","Object","objectSpread","APODApiClient","_ref","baseURL","apiKey","classCallCheck","this","axios","create","params","api_key","get","endpoint","then","response","data","catch","responseMessage","message","Error","config","apodApiClient","process","APOD_API_KEY","APOD_BASE_URL","watcherArticleSaga","workerFetchArticle","regenerator_default","a","wrap","_context","prev","next","takeEvery","stop","_marked","_context2","call","sent","put","t0","_marked2","rootSaga","sagas","articleSaga","all","map","Sagas_marked","articleReducer","state","arguments","length","undefined","initialState","payload","objectWithoutProperties","actions","fetching","reducers","rootReducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","sagaMiddleware","createSagaMiddleware","middlewares","store","createStore","applyMiddleware","apply","run","react_default","createElement","className","concat","Spinner","APODClient","props","_this$props","id","Common_Spinner","Components_Common_Error","Components_APODArticle","React","Component","connect","_ref2","_ref3","Title","assign","ImageContainer","href","children","Body","APODArticle","_ref$article","title","explanation","url","hdurl","Article_Title","Article_ImageContainer","src","Article_Body","App","es","Components_APODClient","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5ebc54dd.chunk.js","sourcesContent":["import IArticle from \"../../Models/IArticle\";\n\nconst types = {\n    fetchArticle: {\n        start: \"FETCH_ARTICLE_START\",\n        success: \"FETCH_ARTICLE_SUCCESS\",\n        error: \"FETCH_ARTICLE_ERROR\",\n    },\n}\n\nconst creators = {\n    fetchArticle: {\n        start: () => ({ type: types.fetchArticle.start }),\n        success: (article: IArticle) => ({ type: types.fetchArticle.success, article }),\n        error: (error: Error) => ({ type: types.fetchArticle.error, error }),\n    },\n}\n\nexport default {\n    types,\n    creators,\n}","import article from './Article';\n\n\nexport default {\n    types: {\n        ...article.types,\n    },\n    creators: {\n        ...article.creators,\n    }\n}\n","import axios, { AxiosInstance, AxiosRequestConfig, AxiosError } from 'axios';\n\nimport IAPODApiClient from './IAPODApiClient';\n\n\ninterface IAPODApiClientOptions {\n    baseURL: string;\n    apiKey: string;\n}\n\nclass APODApiClient implements IAPODApiClient {\n\n    public axios: AxiosInstance;\n\n    constructor({ baseURL, apiKey }: IAPODApiClientOptions) {\n        this.axios = axios.create({\n            baseURL,\n            params: {\n                api_key: apiKey\n            }\n        });\n    }\n\n    get endpoint() {\n        return '/planetary/apod';\n    }\n\n    fetchArticle() {\n        return this.axios.get(this.endpoint)\n            .then((response) => response.data)\n            .catch((error: AxiosError) => {\n                const responseMessage = error.response &&\n                    error.response.data &&\n                    error.response.data.error &&\n                    error.response.data.error.message;\n                throw new Error(responseMessage || error.message);\n            });\n    }\n}\n\nexport default APODApiClient;\n","import config from './config';\n\nexport default config;\n","export default {\n    apodApiClient: {\n        apiKey: process.env.APOD_API_KEY || 'DEMO_KEY',\n        baseURL: process.env.APOD_BASE_URL || 'https://api.nasa.gov',\n    },\n};","import { takeEvery, call, put } from 'redux-saga/effects';\n\nimport Actions from '../Actions';\nimport { APODApiClient } from '../../Clients';\nimport config from '../../Config';\n\n\nconst apodApiClient = new APODApiClient(config.apodApiClient);\n\nexport default function* watcherArticleSaga() {\n    yield takeEvery(Actions.types.fetchArticle.start, workerFetchArticle);\n}\n\nfunction* workerFetchArticle() {\n    try {\n        const article = yield call([apodApiClient, apodApiClient.fetchArticle]);\n        yield put(Actions.creators.fetchArticle.success(article));\n    } catch (e) {\n        yield put(Actions.creators.fetchArticle.error(e))\n    }\n}\n","import { all, call } from \"redux-saga/effects\";\n\nimport articleSaga from './Article';\n\n\nconst sagas = [\n    articleSaga,\n];\n\nfunction* rootSaga() {\n    yield all(sagas.map(call));\n}\n\nexport default rootSaga;\n","import IArticle from \"../../Models/IArticle\";\nimport { Action } from \"redux\";\nimport { IState, initialState } from \".\";\nimport actions from \"../Actions\";\n\n\nfunction articleReducer(state: IState = initialState, { type, ...payload }: Action & any): IState {\n    switch (type) {\n        case actions.types.fetchArticle.start:\n            return {\n                ...state,\n                article: {\n                    ...state.article,\n                    fetching: true,\n                }\n            };\n        case actions.types.fetchArticle.success:\n            return {\n                ...state,\n                article: {\n                    ...state.article,\n                    fetching: false,\n                    data: payload.article,\n                }\n            };\n        case actions.types.fetchArticle.error:\n            return {\n                ...state,\n                article: {\n                    ...state.article,\n                    fetching: false,\n                    error: payload.error\n                }\n            };\n        default:\n            return state;\n    }\n}\n\nexport interface IArticleState {\n    data?: IArticle;\n    fetching: boolean;\n    error?: Error;\n}\n\nexport default articleReducer;\n","import { combineReducers } from \"redux\";\n\nimport article, { IArticleState } from './Article';\n\nexport const initialState: IState = {\n    article: {\n        fetching: false,\n    },\n}\n\nexport interface IState {\n    article: IArticleState;\n}\n\nconst reducers = {\n    article,\n};\n\nconst rootReducer = combineReducers(reducers);\n\nexport default rootReducer;\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport createSagaMiddleware from 'redux-saga'\n\nimport rootSaga from './Sagas';\nimport rootReducer from './Reducers';\n\n\nconst context: any = window\nconst composeEnhancers = context.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst sagaMiddleware = createSagaMiddleware()\n\nconst middlewares = [\n    sagaMiddleware,\n];\n\nconst store = createStore(\n    rootReducer,\n    composeEnhancers(\n        applyMiddleware(\n            ...middlewares\n        )\n    )\n);\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","import React from 'react';\n\nimport './Error.css';\n\n\ninterface IErrorProps extends React.Props<any> {\n    error?: Error;\n}\n\nfunction Error({ error }: IErrorProps) {\n    return (\n        <div className=\"error\">\n            <strong>\n                Error:\n            </strong>\n            {` ${error ? error.message : \"Unexpected Error\"}`}\n        </div>\n    );\n}\n\nexport default Error;\n","import React from 'react';\n\nimport './Spinner.css';\n\n\nfunction Spinner() {\n    return (\n        <div className=\"spinner\">\n            <div className=\"lds-ring\"><div></div><div></div><div></div><div></div></div>\n        </div>\n    );\n}\n\nexport default Spinner;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { APODArticle } from '.';\nimport { Spinner, Error } from './Common';\nimport { IState } from '../Store/Reducers';\nimport actions from '../Store/Actions';\nimport IArticle from '../Models/IArticle';\nimport {\n    getCurrentArticle,\n    isFetchingArticle,\n    getError,\n} from '../Store/Selectors';\n\n\ninterface IAPODClientProps extends React.Props<any> {\n    article?: IArticle;\n    fetching: boolean;\n    error?: Error;\n    fetchArticle: () => void;\n}\n\nclass APODClient extends React.Component<IAPODClientProps> {\n\n    public componentDidMount() {\n        this.props.fetchArticle();\n    }\n\n    public render() {\n        const { article, error, fetching } = this.props;\n\n        return (\n            <div id=\"APODClient\">\n                {fetching ? <Spinner /> : error ? <Error error={error} /> : article ? <APODArticle article={article} /> : <Error />}\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state: IState) {\n    return ({\n        article: getCurrentArticle(state),\n        fetching: isFetchingArticle(state),\n        error: getError(state),\n    });\n}\n\nexport default connect(mapStateToProps, {\n    fetchArticle: actions.creators.fetchArticle.start,\n})(APODClient);\n","\nexport function getCurrentArticle({ article: { article: { data } } }: any) {\n    return data;\n}\n\nexport function isFetchingArticle({ article: { article: { fetching } } }: any) {\n    return fetching;\n}\n\nexport function getError({ article: { article: { error } } }: any) {\n    return error;\n}\n","import React from 'react';\n\nimport './Title.css';\n\ninterface ITitleProps extends React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement> {\n\n}\n\nfunction Title({ className, ...props }: ITitleProps) {\n    const ownClassName = \"article-title\";\n    return (\n        <h1 \n        className={className ? `${ownClassName} ${className}` : ownClassName} \n        {...props} \n        />\n    );\n}\n\nexport default Title;\n","import React from 'react';\n\nimport './ImageContainer.css';\n\n\ninterface IImageContainerProps extends React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement> {\n    href: string;\n}\n\nfunction ImageContainer({ className, href, children, ...props }: IImageContainerProps) {\n    const ownClassName = \"image-container\";\n    return (\n        <div\n            className={className ? `${ownClassName} ${className}` : ownClassName}\n            {...props}\n        >\n            <a href={href}>\n                {children}\n            </a>\n        </div>\n    );\n}\n\nexport default ImageContainer;\n","import React from 'react';\n\nimport './Body.css';\n\n\ninterface IBodyProps extends React.DetailedHTMLProps<React.HTMLAttributes<HTMLParagraphElement>, HTMLParagraphElement> {\n\n}\n\nfunction Body({ className, ...props }: IBodyProps) {\n    const ownClassName = \"article-body\";\n    return (\n        <p \n        className={className ? `${ownClassName} ${className}` : ownClassName} \n        {...props} \n        />\n    );\n}\n\nexport default Body;\n","import React from 'react';\n\nimport { Title, Body, ImageContainer } from './Article';\nimport IArticle from '../../Models/IArticle';\n\nimport './APODArticle.css';\n\n\ninterface IAPODArticleProps extends React.Props<any> {\n    article: IArticle;\n}\n\nfunction APODArticle({ article: {\n    title,\n    explanation,\n    url,\n    hdurl\n} }: IAPODArticleProps) {\n    return (\n        <div className=\"article\">\n            <Title>\n                {title}\n            </Title>\n            <ImageContainer href={hdurl}>\n                <img src={url} />\n            </ImageContainer>\n            <Body>\n                {explanation}\n            </Body>\n        </div>\n    );\n}\n\nexport default APODArticle;\n","import APODArticle from \"./APODArticle\";\n\nexport default APODArticle;\n","import React, { Component } from 'react';\nimport { Provider } from 'react-redux';\n\nimport store from './Store';\nimport { APODClient } from './Components';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Provider store={store}>\n        <APODClient />\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}